import java.io.*;
import java.util.HashMap;
import java.util.StringTokenizer;

public class Main {
static int C,R,Max;
static int[] union;
static int[] size;
static StringTokenizer st;
//run time .240
    public static void main(String[] args) throws IOException {
	// write your code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in
        ));
        PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        String line;;
        while ((line=br.readLine())!=null&!line.equals("0 0")){
            Max = 1;
            st = new StringTokenizer(line);
            C = Integer.parseInt(st.nextToken());
            R = Integer.parseInt(st.nextToken());
            HashMap<String,Integer> names = new HashMap<>();
            union = new int[C];
            size = new int[C];
            for (int i=0;i<C;i++) {
                names.put(br.readLine(), i);
                union[i] = i;
                size[i] = 1;
            }

            for (int i=0;i<R;i++){
                st = new StringTokenizer(br.readLine());
                int prey = names.get(st.nextToken());
                unite(prey,names.get(st.nextToken()));
            }
            br.readLine();
            pr.write(Max+"\n");
        }
        pr.flush();
    }
    public static int find(int x){
        if(union[x]==x)
            return x;
        else
        {
            union[x]  = find(union[x]);
            return union[x];
        }
    }
    static void unite(int prey, int predator){
        if(find(predator)!=find(prey)){
            size[find(predator)]+=size[find(prey)];
            Max = Math.max(Max,size[find(predator)]);
            union[find(prey)] = find(predator);
        }
    }
}
